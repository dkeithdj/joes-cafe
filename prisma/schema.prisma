// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  id     String   @id @unique @default(uuid())
  name   String
  basket Basket[]
}

model Staff {
  id         String  @id @default(uuid())
  first_name String
  last_name  String
  order      Order[]
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String?
  products    Product[]
}

model PaymentMethod {
  id          String  @id @default(uuid())
  paymentType String
  order       Order[]
}

model Product {
  id          String   @id @default(uuid())
  name        String
  price       Int
  description String?
  image       String?
  isAvailable Boolean
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String
  basket      Basket[]
}

model Basket {
  // id         String   @id @default(uuid())
  customer   Customer @relation(fields: [customerId], references: [id])
  product    Product  @relation(fields: [productId], references: [id])
  quantity   Int      @default(1)
  customerId String   @id
  productId  String
  order      Order[]
}

model Order {
  id            String        @id @default(uuid())
  date          DateTime      @default(now())
  totalAmount   Int
  staff         Staff         @relation(fields: [staffId], references: [id])
  paymentMethod PaymentMethod @relation(fields: [paymentId], references: [id])
  basket        Basket        @relation(fields: [basketId], references: [customerId])
  status        Order_Status  @relation(fields: [statusId], references: [id])
  staffId       String
  paymentId     String
  basketId      String
  statusId      String
}

model Order_Status {
  id     String  @id @default(uuid())
  status Status  @default(Completed)
  order  Order[]
}

enum Status {
  Processing
  Completed
  Declined
}
